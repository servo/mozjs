# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

FINAL_LIBRARY = "js"

# Includes should be relative to parent path
LOCAL_INCLUDES += ["!..", ".."]

include("../js-config.mozbuild")
include("../js-cxxflags.mozbuild")

UNIFIED_SOURCES += [
    "AsmJS.cpp",
    "WasmAnyRef.cpp",
    "WasmBaselineCompile.cpp",
    "WasmBCFrame.cpp",
    "WasmBCMemory.cpp",
    "WasmBinary.cpp",
    "WasmBuiltinModule.cpp",
    "WasmBuiltins.cpp",
    "WasmCode.cpp",
    "WasmCodegenTypes.cpp",
    "WasmCompile.cpp",
    "WasmDebug.cpp",
    "WasmDebugFrame.cpp",
    "WasmDump.cpp",
    "WasmFeatures.cpp",
    "WasmFrameIter.cpp",
    "WasmGC.cpp",
    "WasmGcObject.cpp",
    "WasmGenerator.cpp",
    "WasmInitExpr.cpp",
    "WasmInstance.cpp",
    "WasmIonCompile.cpp",
    "WasmJS.cpp",
    "WasmLog.cpp",
    "WasmMemory.cpp",
    "WasmMetadata.cpp",
    "WasmModule.cpp",
    "WasmModuleTypes.cpp",
    "WasmOpIter.cpp",
    "WasmPI.cpp",
    "WasmProcess.cpp",
    "WasmRealm.cpp",
    "WasmSerialize.cpp",
    "WasmSignalHandlers.cpp",
    "WasmStaticTypeDefs.cpp",
    "WasmStubs.cpp",
    "WasmSummarizeInsn.cpp",
    "WasmTable.cpp",
    "WasmTypeDef.cpp",
    "WasmValidate.cpp",
    "WasmValType.cpp",
    "WasmValue.cpp",
]

# Generate wasm/WasmBuiltinModuleGenerated.h from wasm/WasmBuiltinModule.yaml
GeneratedFile(
    "WasmBuiltinModuleGenerated.h",
    script="GenerateBuiltinModules.py",
    inputs=["WasmBuiltinModule.yaml"],
)

# Make sure all WebAssembly code is built with libfuzzer
# coverage instrumentation in FUZZING mode.
if CONFIG["FUZZING_INTERFACES"] and CONFIG["LIBFUZZER"]:
    include("/tools/fuzzing/libfuzzer-config.mozbuild")
